steps:
- bash: |
    npm install --force @azure-tools/azcopy-darwin
    chmod u+x node_modules/@azure-tools/azcopy-darwin/dist/bin/azcopy_darwin_amd64
  displayName: 'Install azcopy (MacOS)'
  condition: eq(variables['Agent.OS'], 'Darwin')

- bash: |
    npm install --force @azure-tools/azcopy-linux
    chmod u+x node_modules/@azure-tools/azcopy-linux/dist/bin/azcopy_linux_amd64
  displayName: 'Install azcopy (Linux)'
  condition: eq(variables['Agent.OS'], 'Linux')

- bash: |
    npm install --force @azure-tools/azcopy-win32 \
      @azure-tools/azcopy-win64
  displayName: 'Install azcopy (Windows)'
  condition: eq(variables['Agent.OS'], 'Windows_NT')

- task: Npm@1
  displayName: 'cleanReadme'
  inputs:
    command: custom
    customCommand: run cleanReadme

- task: Npm@1
  displayName: 'Package'
  inputs:
    command: custom
    customCommand: run package

- task: CopyFiles@2
  displayName: 'Copy vsix to staging directory'
  inputs:
    Contents: '**/*.vsix'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts: vsix'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: vsix
  # Only publish vsix from linux build since we use this to release and want to stay consistent
  condition: and(eq(variables['Agent.OS'], 'Linux'), ne(variables['System.PullRequest.IsFork'], 'True'))
